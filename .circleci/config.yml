version: 2.1

workflows:
  test-env-vars:
    jobs:
      - build

jobs:
  build:
    docker:
      - image: ubuntu:bionic
    environment:
      PYTHON_VERSION: 3.6.7
    steps:
      - checkout
      - run:
          name: Setup Miniconda
          command: |
            apt update
            apt install -y wget
            apt-get update --yes && apt-get upgrade --yes
            apt-get install g++ --yes
            cd $HOME
            wget "https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh" -O miniconda.sh
            printf '%s' "bfe34e1fa28d6d75a7ad05fd02fa5472275673d5f5621b77380898dee1be15d2  miniconda.sh" | sha256sum -c
            bash miniconda.sh -b -p $HOME/miniconda
      - run:
          name: Setup environment and run tests
          command: |
            export PATH="$HOME/miniconda/bin:$PATH"
            source $HOME/miniconda/etc/profile.d/conda.sh
            conda install mamba -n base -c conda-forge --yes
            # mamba update -y conda
            # mamba update -y mamba
            mamba env create -f environment.yml

            conda activate ARIA-tools

            mamba install -c conda-forge git wget pyresample

            echo "machine urs.earthdata.nasa.gov login $URSname password $URSkey" > ~/.netrc
            chmod 600 ~/.netrc
            
            #clone mintpy
            export MINTPY_HOME="$HOME/miniconda/MintPy"
            git clone https://github.com/insarlab/MintPy.git ${MINTPY_HOME}
            
            python --version
            python -c "import numpy; print(numpy.__version__)"
            python -c "import pyproj; print(pyproj.__version__)"
      - run:
          name: Install ARIA-tools and test the install
          command: |
            source $HOME/miniconda/etc/profile.d/conda.sh
            conda activate ARIA-tools
            export PYTHONPATH="$HOME/miniconda/MintPy:$HOME/miniconda/ARIA-tools/tools/ARIAtools"
            export PATH="$HOME/miniconda/MintPy/mintpy:$PATH"
            export MINTPY_HOME="$HOME/miniconda/MintPy"
            export GDAL_HTTP_COOKIEFILE=/tmp//cookies.txt
            export GDAL_HTTP_COOKIEJAR=/tmp//cookies.txt
            export VSI_CACHE=YES
            echo $CC_OT > ~/.topoapi
            echo gdalinfo --version
            chmod 600 ~/.topoapi
            python setup.py build
            python setup.py install
            ariaDownload.py -h
            
            # install mintpy
            conda deactivate
            mamba env create --name mintpy -f ${MINTPY_HOME}/requirements.txt
            conda activate mintpy
            python -m pip install ${MINTPY_HOME}
            prep_aria.py -h
            conda deactivate
      - run:
          name: Run unit tests
          command: |
            source $HOME/miniconda/etc/profile.d/conda.sh
            conda activate ARIA-tools
            export PYTHONPATH="$HOME/miniconda/MintPy:$HOME/miniconda/ARIA-tools/tools/ARIAtools"
            export PATH="$HOME/miniconda/MintPy/mintpy:$PATH"
            export MINTPY_HOME="$HOME/miniconda/MintPy"
            mkdir test
            cd test
            #product count
            ariaDownload.py -t 124 -w products --ifg 20180408_20180502 -v -o count
            #product url
            ariaDownload.py -t 124 -w products --ifg 20180408_20180502 -v -o url
            #product download
            #ariaDownload.py -t 124 -w products --ifg 20180408_20180502 -v
            cd products
            wget --no-clobber --load-cookies /tmp/cookies.txt --save-cookies /tmp/cookies.txt --keep-session-cookies https://grfn.asf.alaska.edu/door/download/S1-GUNW-A-R-124-tops-20180502_20180408-043106-21658N_19755N-PP-0dd0-v2_0_1.nc
            wget --no-clobber --load-cookies /tmp/cookies.txt --save-cookies /tmp/cookies.txt --keep-session-cookies https://grfn.asf.alaska.edu/door/download/S1-GUNW-A-R-124-tops-20180502_20180408-043040-20161N_18088N-PP-6704-v2_0_1.nc
            cd ../
            
            #extraction of 3D metadata layer
            ariaExtract.py -f "products/*.nc" -l azimuthAngle -d download
            #extraction and mosaicking of coherence data layer
            ariaExtract.py -f "products/*.nc" -l coherence
            #extraction and mosaicking of unwrappedPhase data layer
            ariaExtract.py -f "products/*.nc" -l unwrappedPhase
            
            #time-series prep
            ariaTSsetup.py -d download -m download -f "products/*.nc"
            #run loading of aria products in mintpy
            conda deactivate
            conda activate mintpy
            prep_aria.py -s stack/ -d DEM/SRTM_3arcsec.dem -i incidenceAngle/20180502_20180408.vrt -a azimuthAngle/20180502_20180408.vrt
            
            #download and test NLCD mask
            cd products
            conda deactivate
            conda activate ARIA-tools
            wget --no-clobber --load-cookies /tmp/cookies.txt --save-cookies /tmp/cookies.txt --keep-session-cookies https://grfn.asf.alaska.edu/door/download/S1-GUNW-A-R-004-tops-20190325_20190301-230628-37654N_35777N-PP-13e7-v2_0_2.nc
            wget --no-clobber --load-cookies /tmp/cookies.txt --save-cookies /tmp/cookies.txt --keep-session-cookies https://grfn.asf.alaska.edu/door/download/S1-GUNW-A-R-004-tops-20190325_20190301-230628-37654N_35777N-PP-13e7-v2_0_2.nc
            cd ../
            ariaExtract.py -f "products/*004-*.nc" -m 'NLCD'
